name: build

on:
  push:
    branches:
      - master
      - release-*
    tags:
      - v*
  
  pull_request:
    branches:
      - master
      - release-*

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      NUPKG_OUTDIR: bin/Release/nugets
    steps:
      - uses: actions/checkout@v1
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Build
        run: dotnet build --configuration Release

      - name: Generate packages
        run: dotnet pack --configuration Release

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: ${{ env.NUPKG_OUTDIR }}

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      - name: Build
        run: dotnet build --configuration Release /p:GITHUB_ACTIONS=false
      - name: Test
        id: tests
        run: |
          dotnet test --configuration Release \
            --no-build \
            --no-restore \
            /p:GITHUB_ACTIONS=false

  publish:
    name: Publish
    needs: ['build', 'test']
    runs-on: ubuntu-latest
    if: startswith(github.ref, 'refs/tags/v') && !(endsWith(github.ref, '-rc') || endsWith(github.ref, '-dev') || endsWith(github.ref, '-prerelease'))
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: packages
      - name: Publish nuget packages to nuget.org
        if: startswith(github.ref, 'refs/tags/v') && !(endsWith(github.ref, '-rc') || endsWith(github.ref, '-dev') || endsWith(github.ref, '-prerelease'))
        run: |
          dotnet nuget push "./packages/*.nupkg" --skip-duplicate --api-key ${{ secrets.NUGETORG_API_KEY }} --source https://api.nuget.org/v3/index.json